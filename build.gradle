plugins {
    id 'org.jetbrains.kotlin.jvm' version '1.3.61'
    id 'maven-publish'
    id 'signing'
    id 'com.bmuschko.nexus' version '2.3.1'
}

group 'com.spotify.tracing'
version = System.getenv('CIRCLE_TAG') ?: System.getenv('DOCKER_TAG') ?: '0.1.1-SNAPSHOT'

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation 'org.jetbrains.kotlin:kotlin-stdlib-jdk8'
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:1.3.3"

    implementation "io.opencensus:opencensus-api:0.24.0"
    implementation "com.github.ben-manes.caffeine:caffeine:2.8.1"

    def junit_version = '5.6.0'
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junit_version"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junit_version"
    testImplementation "io.mockk:mockk:1.9"
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).configureEach {
    kotlinOptions {
        jvmTarget = "11"
        apiVersion = "1.3"
        languageVersion = "1.3"
    }
}

test {
    useJUnitPlatform()
}

signing {
    // Ignore signing requirement if we aren't publishing. Without this check,
    // gpg signatures would be required for every build.
    required { gradle.taskGraph.hasTask(tasks.uploadArchives) }
    if (project.hasProperty('signing.gnupg.keyName')) {
        useGpgCmd()
    }
}

modifyPom {
    project {
        description 'Squash similar spans in OpenCensus'
        name 'Squashing OpenCensus Exporter'
        url 'https://github.com/spotify/squashing-census-exporter'
        licenses {
            license {
                name 'Apache License 2.0'
                url 'https://github.com/spotify/squashing-census-exporter/blob/master/LICENSE'
                distribution 'repo'
            }
        }
        scm {
            url 'https://github.com/spotify/squashing-census-exporter'
            connection 'scm:git:git://github.com/spotify/squashing-census-exporter.git'
            developerConnection 'scm:git:ssh://git@github.com:spotify/squashing-census-exporter.git'
        }
        developers {
            developer {
                id 'prism'
                name 'prism'
                email 'prism@spotify.com'
            }
        }
    }
}
